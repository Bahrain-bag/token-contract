"Asm.fif" include
// automatically generated from `../nft/stdlib.fc` `op_codes.fc` `jetton_wallet_utils.fc` `wrapped_ton.fc` 
PROGRAM{
  DECLPROC pack_wallet_data
  DECLPROC calculate_token_state_init
  DECLPROC calc_address
  DECLPROC calc_user_wallet
  DECLPROC mint_wtons
  DECLPROC release_tons
  DECLPROC recv_internal
  pack_wallet_data PROC:<{
    //  balance owner jetton_master token_wallet_code
    NEWC	//  balance owner jetton_master token_wallet_code _4
    s0 s4 XCHG2	//  token_wallet_code owner jetton_master _4 balance
    STGRAMS	//  token_wallet_code owner jetton_master _5
    ROT	//  token_wallet_code jetton_master _5 owner
    STSLICER	//  token_wallet_code jetton_master _6
    SWAP	//  token_wallet_code _6 jetton_master
    STSLICER	//  token_wallet_code _7
    STREF	//  _8
    ENDC	//  _9
  }>
  calculate_token_state_init PROC:<{
    //  owner jetton_master code
    0 PUSHINT	//  owner jetton_master code _3=0
    s0 s1 s2 XCPUXC
    s4 s0 s3 XC2PU	//  _3=0 code _4=0 owner jetton_master code
    pack_wallet_data INLINECALLDICT	//  _3=0 code _5
    s2 PUSH	//  _3=0 code _5 _6=0
    NEWC	//  _3=0 code _5 _6=0 _7
    2 STU	//  _3=0 code _5 _9
    s1 s2 XCHG	//  _3=0 _5 code _9
    STDICT	//  _3=0 _5 _10
    STDICT	//  _3=0 _11
    1 STU	//  _13
    ENDC	//  _14
  }>
  calc_address PROC:<{
    //  state_init
    HASHCU	//  _1
    0 PUSHINT	//  _1 _2=0
    4 PUSHINT	//  _1 _2=0 _3=4
    NEWC	//  _1 _2=0 _3=4 _4
    3 STU	//  _1 _2=0 _6
    8 STI	//  _1 _8
    256 STU	//  _10
    ENDC	//  _11
    CTOS	//  _12
  }>
  calc_user_wallet PROC:<{
    //  owner jetton_master code
    calculate_token_state_init INLINECALLDICT	//  _3
    calc_address INLINECALLDICT	//  _4
  }>
  mint_wtons PROC:<{
    //  to amount
    MYADDR	//  to amount _3
    ft_code PUSHREF	//  to amount _3 _4
    s2 s3 XCHG	//  amount to _3 _4
    calculate_token_state_init INLINECALLDICT	//  amount state_init
    DUP	//  amount state_init state_init
    calc_address INLINECALLDICT	//  amount state_init to_wallet
    LTIME	//  amount state_init to_wallet _9
    14 PUSHINT	//  amount state_init to_wallet _9 _10=14
    6 PUSHINT	//  amount state_init to_wallet _9 _10=14 _15
    24 PUSHINT	//  amount state_init to_wallet _9 _10=14 _15 _16=24
    NEWC	//  amount state_init to_wallet _9 _10=14 _15 _16=24 _17
    6 STU	//  amount state_init to_wallet _9 _10=14 _15 _19
    s0 s4 XCHG2	//  amount state_init _15 _9 _10=14 _19 to_wallet
    STSLICER	//  amount state_init _15 _9 _10=14 _20
    40000000 PUSHINT	//  amount state_init _15 _9 _10=14 _20 _21=40000000
    STVARUINT16	//  amount state_init _15 _9 _10=14 _22
    s1 s3 XCHG	//  amount state_init _10=14 _9 _15 _22
    108 STU	//  amount state_init _10=14 _9 _38
    s1 s3 XCHG	//  amount _9 _10=14 state_init _38
    STREF	//  amount _9 _10=14 _39
    32 STU	//  amount _9 _41
    64 STU	//  amount _43
    SWAP	//  _43 amount
    STVARUINT16	//  msg
    ENDC	//  _45
    0 PUSHINT	//  _45 _46=0
    SENDRAWMSG
  }>
  release_tons PROC:<{
    //  in_msg sender
    SWAP	//  sender in_msg
    64 LDU	//  sender query_id in_msg
    LDVARUINT16	//  sender query_id amount in_msg
    LDMSGADDR	//  sender query_id amount _53 _52
    DROP	//  sender query_id amount from
    MYADDR	//  sender query_id amount from _13
    ft_code PUSHREF	//  sender query_id amount from _13 _14
    s2 PUSH
    -ROT	//  sender query_id amount from from _13 _14
    calc_user_wallet INLINECALLDICT	//  sender query_id amount from _15
    s0 s4 XCHG2	//  from query_id amount _15 sender
    SDEQ	//  from query_id amount _16
    707 THROWIFNOT
    20 PUSHINT	//  from query_id amount _19=20
    0 PUSHINT	//  from query_id amount _19=20 _20=0
    16 PUSHINT	//  from query_id amount _19=20 _20=0 _21=16
    NEWC	//  from query_id amount _19=20 _20=0 _21=16 _22
    6 STU	//  from query_id amount _19=20 _20=0 _24
    s0 s5 XCHG2	//  _20=0 query_id amount _19=20 _24 from
    STSLICER	//  _20=0 query_id amount _19=20 _25
    ROT	//  _20=0 query_id _19=20 _25 amount
    STVARUINT16	//  _20=0 query_id _19=20 _26
    s1 s3 XCHG	//  _19=20 query_id _20=0 _26
    107 STU	//  _19=20 query_id _40
    s1 s2 XCHG	//  query_id _19=20 _40
    32 STU	//  query_id _42
    64 STU	//  msg
    ENDC	//  _45
    64 PUSHINT	//  _45 _46=64
    SENDRAWMSG
  }>
  recv_internal PROC:<{
    //  msg_value in_msg_cell in_msg
    SWAP	//  msg_value in_msg in_msg_cell
    CTOS	//  msg_value in_msg cs
    4 LDU	//  msg_value in_msg flags cs
    SWAP
    1 PUSHINT	//  msg_value in_msg cs flags _9=1
    AND	//  msg_value in_msg cs _10
    IFJMP:<{	//  msg_value in_msg cs
      3 BLKDROP	// 
    }>	//  msg_value in_msg cs
    LDMSGADDR	//  msg_value in_msg _31 _30
    DROP	//  msg_value in_msg sender
    SWAP	//  msg_value sender in_msg
    32 LDU	//  msg_value sender op in_msg
    OVER	//  msg_value sender op in_msg op
    19 EQINT	//  msg_value sender op in_msg _19
    IFJMP:<{	//  msg_value sender op in_msg
      2DROP	//  msg_value sender
      SWAP
      50000000 PUSHINT	//  sender msg_value _20=50000000
      SUB	//  sender msg_value
      mint_wtons CALLDICT
    }>	//  msg_value sender op in_msg
    s3 POP	//  in_msg sender op
    18 EQINT	//  in_msg sender _24
    IFJMP:<{	//  in_msg sender
      release_tons CALLDICT
    }>	//  in_msg sender
    2DROP	// 
    1111 THROW
  }>
}END>c
